source place_index
{
    type                = mysql
    sql_host            = 
    sql_user            = root

    sql_pass            = NEW-ROOT-PASSWORD 

    sql_db              = otdohni2
    sql_port            = 

    sql_query_pre       = SET NAMES utf8
    sql_query_post      =

    sql_query           = \
        SELECT `id`, `name`, `date_promo_up`, `date_promo_down`, 33 as content_type\
        FROM place_place
    sql_query_info      = SELECT * FROM `place_place` WHERE `id` = $id

    sql_ranged_throttle = 0

    # ForeignKey's
    sql_attr_uint       = content_type


    # DateField's and DateTimeField's
    sql_attr_timestamp   = date_promo_up
    sql_attr_timestamp   = date_promo_down

    sql_attr_multi = uint category from query; SELECT place_id, category_id \
    FROM place_place_rate_categories


}

index place_index
{
    source          = place_index
    path            = tmp/search/_data/place_index
    docinfo         = extern
    morphology      = stem_enru
    stopwords       =
    min_word_len    = 2
    charset_type    = utf-8
    min_prefix_len  = 0
    min_infix_len   = 2
    enable_star     = 1
}

source action_index
{
    type                = mysql
    sql_host            = 
    sql_user            = root
    sql_pass            = NEW-ROOT-PASSWORD
    sql_db              = otdohni2
    sql_port            = 

    sql_query_pre       = SET NAMES utf8
    sql_query_post      =

    sql_query           = \
        SELECT `id`, `is_published`, `pub_date`, `title`, 23 as content_type\
        FROM action_action
    sql_query_info      = SELECT * FROM `action_action` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = content_type


    # DateField's and DateTimeField's
    sql_attr_timestamp   = pub_date
}

index action_index
{
    source          = action_index
    path            = tmp/search/_data/action_index
    docinfo         = extern
    morphology      = stem_enru
    stopwords       =
    min_word_len    = 2
    charset_type    = utf-8
    min_prefix_len  = 0
    min_infix_len   = 2
    enable_star     = 1
}

source poll_index
{
    type                = mysql
    sql_host            = 
    sql_user            = root
    sql_pass            = NEW-ROOT-PASSWORD
    sql_db              = otdohni2
    sql_port            = 

    sql_query_pre       = SET NAMES utf8
    sql_query_post      =

    sql_query           = \
        SELECT `id`, `is_published`, `pub_date`, `action_id`, `title`, `start_date`, `end_date`, `status`, 24 as content_type\
        FROM action_poll
    sql_query_info      = SELECT * FROM `action_poll` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = action_id
    sql_attr_uint       = content_type


    # DateField's and DateTimeField's
    sql_attr_timestamp   = pub_date
    sql_attr_timestamp   = start_date
    sql_attr_timestamp   = end_date
}

index poll_index
{
    source          = poll_index
    path            = tmp/search/_data/poll_index
    docinfo         = extern
    morphology      = stem_enru
    stopwords       =
    min_word_len    = 2
    charset_type    = utf-8
    min_prefix_len  = 0
    min_infix_len   = 2
    enable_star     = 1
}

source workbidder_index
{
    type                = mysql
    sql_host            = 
    sql_user            = root
    sql_pass            = NEW-ROOT-PASSWORD
    sql_db              = otdohni2
    sql_port            = 

    sql_query_pre       = SET NAMES utf8
    sql_query_post      =

    sql_query           = \
        SELECT `id`, `title`, `poll_id`, `author_name`, `photo`, `text`, 25 as content_type\
        FROM action_workbidder
    sql_query_info      = SELECT * FROM `action_workbidder` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = poll_id
    sql_attr_uint       = content_type
}

index workbidder_index
{
    source          = workbidder_index
    path            = tmp/search/_data/workbidder_index
    docinfo         = extern
    morphology      = stem_enru
    stopwords       =
    min_word_len    = 2
    charset_type    = utf-8
    min_prefix_len  = 0
    min_infix_len   = 2
    enable_star     = 1
}

source event_index
{
    type                = mysql
    sql_host            = 
    sql_user            = root
    sql_pass            = NEW-ROOT-PASSWORD
    sql_db              = otdohni2
    sql_port            = 

    sql_query_pre       = SET NAMES utf8
    sql_query_post      =

    sql_query           = \
        SELECT `id`, `title`, `category_id`, 52 as content_type\
        FROM event_event
    sql_query_info      = SELECT * FROM `event_event` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = category_id
    sql_attr_uint       = content_type
}

index event_index
{
    source          = event_index
    path            = tmp/search/_data/event_index
    docinfo         = extern
    morphology      = stem_enru
    stopwords       =
    min_word_len    = 2
    charset_type    = utf-8
    min_prefix_len  = 0
    min_infix_len   = 2
    enable_star     = 1
}

source photoreport_index
{
    type                = mysql
    sql_host            = 
    sql_user            = root
    sql_pass            = NEW-ROOT-PASSWORD
    sql_db              = otdohni2
    sql_port            = 

    sql_query_pre       = SET NAMES utf8
    sql_query_post      =

    sql_query           = \
        SELECT `id`, `is_published`, `date_event`, `pub_date`, `place_event_id`, `title`, 47 as content_type\
        FROM photoreport_photoreport
    sql_query_info      = SELECT * FROM `photoreport_photoreport` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = place_event_id
    sql_attr_uint       = content_type


    # DateField's and DateTimeField's
    sql_attr_timestamp   = pub_date
    sql_attr_timestamp   = date_event
}

index photoreport_index
{
    source          = photoreport_index
    path            = tmp/search/_data/photoreport_index
    docinfo         = extern
    morphology      = stem_enru
    stopwords       =
    min_word_len    = 2
    charset_type    = utf-8
    min_prefix_len  = 0
    min_infix_len   = 2
    enable_star     = 1
}

source photo_index
{
    type                = mysql
    sql_host            = 
    sql_user            = root
    sql_pass            = NEW-ROOT-PASSWORD
    sql_db              = otdohni2
    sql_port            = 

    sql_query_pre       = SET NAMES utf8
    sql_query_post      =

    sql_query           = \
        SELECT `id`, `photoreport_id`, `title`, `date_added`, 48 as content_type\
        FROM photoreport_photo
    sql_query_info      = SELECT * FROM `photoreport_photo` WHERE `id` = $id

    # ForeignKey's
    sql_attr_uint       = photoreport_id
    sql_attr_uint       = content_type


    # DateField's and DateTimeField's
    sql_attr_timestamp   = date_added
}

index photo_index
{
    source          = photo_index
    path            = tmp/search/_data/photo_index
    docinfo         = extern
    morphology      = stem_enru
    stopwords       =
    min_word_len    = 2
    charset_type    = utf-8
    min_prefix_len  = 0
    min_infix_len   = 2
    enable_star     = 1
}

indexer
{
        # memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
        # optional, default is 32M, max is 2047M, recommended is 256M to 1024M
        mem_limit               = 256M

        # maximum IO calls per second (for I/O throttling)
        # optional, default is 0 (unlimited)
        #
        # max_iops              = 40

        # maximum IO call size, bytes (for I/O throttling)
        # optional, default is 0 (unlimited)
        #
        max_iosize              = 524288
}

searchd
{
        
        listen = 127.0.0.1:9313
        
        

        # log file, searchd run info is logged here
        # optional, default is 'searchd.log'
        log                     = tmp/logssearchd.log

        # query log file, all search queries are logged here
        # optional, default is empty (do not log queries)
        query_log               = tmp/logsquery.log

        # client read timeout, seconds
        # optional, default is 5
        read_timeout    = 5

        # maximum amount of children to fork (concurrent searches to run)
        # optional, default is 0 (unlimited)
        max_children    = 30

        # PID file, searchd process ID file name
        # mandatory
        pid_file                = tmp/sphinx.pid

        # max amount of matches the daemon ever keeps in RAM, per-index
        # WARNING, THERE'S ALSO PER-QUERY LIMIT, SEE SetLimits() API CALL
        # default is 1000 (just like Google)
        max_matches             = 1000

        # seamless rotate, prevents rotate stalls if precaching huge datasets
        # optional, default is 1
        seamless_rotate = 1

        # whether to forcibly preopen all indexes on startup
        # optional, default is 0 (do not preopen)
        preopen_indexes = 0

        # whether to unlink .old index copies on succesful rotation.
        # optional, default is 1 (do unlink)
        unlink_old              = 1
}
